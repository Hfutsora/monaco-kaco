// Generated from src/parser/kaco.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class kacoLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly OpenBracket = 9;
	public static readonly CloseBracket = 10;
	public static readonly OpenParen = 11;
	public static readonly CloseParen = 12;
	public static readonly SemiColon = 13;
	public static readonly Comma = 14;
	public static readonly Assign = 15;
	public static readonly Equal = 16;
	public static readonly Dot = 17;
	public static readonly Ellipsis = 18;
	public static readonly OpenForm = 19;
	public static readonly SaveForm = 20;
	public static readonly Selected = 21;
	public static readonly All = 22;
	public static readonly StringLiteral = 23;
	public static readonly StringDotLiteral = 24;
	public static readonly BooleanLiteral = 25;
	public static readonly DecimalLiteral = 26;
	public static readonly ParamLiteral = 27;
	public static readonly Decimal = 28;
	public static readonly Natural = 29;
	public static readonly LineComment = 30;
	public static readonly WhiteSpace = 31;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "OpenBracket", 
		"CloseBracket", "OpenParen", "CloseParen", "SemiColon", "Comma", "Assign", 
		"Equal", "Dot", "Ellipsis", "OpenForm", "SaveForm", "Selected", "All", 
		"StringLiteral", "StringDotLiteral", "BooleanLiteral", "DecimalLiteral", 
		"ParamLiteral", "Decimal", "Natural", "NonZeroDigit", "DigitChar", "LineComment", 
		"WhiteSpace",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'if'", "'else'", "'{'", "'}'", "'-'", "'+'", "'/'", "'-1'", 
		"'['", "']'", "'('", "')'", "';'", "','", "'='", "'=='", "'.'", "'...'", 
		"'OpenForm'", "'SaveForm'", undefined, "'*'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, "OpenBracket", "CloseBracket", "OpenParen", "CloseParen", 
		"SemiColon", "Comma", "Assign", "Equal", "Dot", "Ellipsis", "OpenForm", 
		"SaveForm", "Selected", "All", "StringLiteral", "StringDotLiteral", "BooleanLiteral", 
		"DecimalLiteral", "ParamLiteral", "Decimal", "Natural", "LineComment", 
		"WhiteSpace",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(kacoLexer._LITERAL_NAMES, kacoLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return kacoLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(kacoLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "kaco.g4"; }

	// @Override
	public get ruleNames(): string[] { return kacoLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return kacoLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return kacoLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return kacoLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02!\u0111\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03" +
		"\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03" +
		"\b\x03\t\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03" +
		"\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03" +
		"\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03" +
		"\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03" +
		"\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03" +
		"\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03" +
		"\x16\x03\x16\x03\x16\x03\x16\x05\x16\x94\n\x16\x03\x17\x03\x17\x03\x18" +
		"\x03\x18\x07\x18\x9A\n\x18\f\x18\x0E\x18\x9D\v\x18\x03\x18\x03\x18\x03" +
		"\x19\x03\x19\x03\x19\x05\x19\xA4\n\x19\x03\x19\x03\x19\x07\x19\xA8\n\x19" +
		"\f\x19\x0E\x19\xAB\v\x19\x03\x19\x07\x19\xAE\n\x19\f\x19\x0E\x19\xB1\v" +
		"\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03" +
		"\x1A\x05\x1A\xBC\n\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1C" +
		"\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x07\x1C\xC8\n\x1C\f\x1C\x0E\x1C\xCB\v" +
		"\x1C\x05\x1C\xCD\n\x1C\x03\x1D\x03\x1D\x03\x1D\x07\x1D\xD2\n\x1D\f\x1D" +
		"\x0E\x1D\xD5\v\x1D\x03\x1D\x05\x1D\xD8\n\x1D\x03\x1D\x03\x1D\x07\x1D\xDC" +
		"\n\x1D\f\x1D\x0E\x1D\xDF\v\x1D\x03\x1D\x03\x1D\x07\x1D\xE3\n\x1D\f\x1D" +
		"\x0E\x1D\xE6\v\x1D\x03\x1D\x05\x1D\xE9\n\x1D\x05\x1D\xEB\n\x1D\x03\x1E" +
		"\x03\x1E\x03\x1E\x07\x1E\xF0\n\x1E\f\x1E\x0E\x1E\xF3\v\x1E\x05\x1E\xF5" +
		"\n\x1E\x03\x1F\x03\x1F\x03 \x03 \x03 \x05 \xFC\n \x03!\x03!\x03!\x03!" +
		"\x07!\u0102\n!\f!\x0E!\u0105\v!\x03!\x05!\u0108\n!\x03!\x03!\x03!\x03" +
		"!\x03\"\x03\"\x03\"\x03\"\x03\x9B\x02\x02#\x03\x02\x03\x05\x02\x04\x07" +
		"\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15" +
		"\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02" +
		"\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191" +
		"\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02\x02?\x02\x02" +
		"A\x02 C\x02!\x03\x02\x07\x05\x02\f\f\x0F\x0F^^\x03\x023;\x03\x022;\x04" +
		"\x02\f\f\x0F\x0F\x05\x02\v\f\x0F\x0F\"\"\x02\u0122\x02\x03\x03\x02\x02" +
		"\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02" +
		"\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02" +
		"\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02" +
		"\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02" +
		"\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02" +
		"\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)" +
		"\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02" +
		"\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02" +
		"\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02A\x03" +
		"\x02\x02\x02\x02C\x03\x02\x02\x02\x03E\x03\x02\x02\x02\x05H\x03\x02\x02" +
		"\x02\x07M\x03\x02\x02\x02\tO\x03\x02\x02\x02\vQ\x03\x02\x02\x02\rS\x03" +
		"\x02\x02\x02\x0FU\x03\x02\x02\x02\x11W\x03\x02\x02\x02\x13Z\x03\x02\x02" +
		"\x02\x15\\\x03\x02\x02\x02\x17^\x03\x02\x02\x02\x19`\x03\x02\x02\x02\x1B" +
		"b\x03\x02\x02\x02\x1Dd\x03\x02\x02\x02\x1Ff\x03\x02\x02\x02!h\x03\x02" +
		"\x02\x02#k\x03\x02\x02\x02%m\x03\x02\x02\x02\'q\x03\x02\x02\x02)z\x03" +
		"\x02\x02\x02+\x93\x03\x02\x02\x02-\x95\x03\x02\x02\x02/\x97\x03\x02\x02" +
		"\x021\xA0\x03\x02\x02\x023\xBB\x03\x02\x02\x025\xBD\x03\x02\x02\x027\xCC" +
		"\x03\x02\x02\x029\xEA\x03\x02\x02\x02;\xF4\x03\x02\x02\x02=\xF6\x03\x02" +
		"\x02\x02?\xFB\x03\x02\x02\x02A\xFD\x03\x02\x02\x02C\u010D\x03\x02\x02" +
		"\x02EF\x07k\x02\x02FG\x07h\x02\x02G\x04\x03\x02\x02\x02HI\x07g\x02\x02" +
		"IJ\x07n\x02\x02JK\x07u\x02\x02KL\x07g\x02\x02L\x06\x03\x02\x02\x02MN\x07" +
		"}\x02\x02N\b\x03\x02\x02\x02OP\x07\x7F\x02\x02P\n\x03\x02\x02\x02QR\x07" +
		"/\x02\x02R\f\x03\x02\x02\x02ST\x07-\x02\x02T\x0E\x03\x02\x02\x02UV\x07" +
		"1\x02\x02V\x10\x03\x02\x02\x02WX\x07/\x02\x02XY\x073\x02\x02Y\x12\x03" +
		"\x02\x02\x02Z[\x07]\x02\x02[\x14\x03\x02\x02\x02\\]\x07_\x02\x02]\x16" +
		"\x03\x02\x02\x02^_\x07*\x02\x02_\x18\x03\x02\x02\x02`a\x07+\x02\x02a\x1A" +
		"\x03\x02\x02\x02bc\x07=\x02\x02c\x1C\x03\x02\x02\x02de\x07.\x02\x02e\x1E" +
		"\x03\x02\x02\x02fg\x07?\x02\x02g \x03\x02\x02\x02hi\x07?\x02\x02ij\x07" +
		"?\x02\x02j\"\x03\x02\x02\x02kl\x070\x02\x02l$\x03\x02\x02\x02mn\x070\x02" +
		"\x02no\x070\x02\x02op\x070\x02\x02p&\x03\x02\x02\x02qr\x07Q\x02\x02rs" +
		"\x07r\x02\x02st\x07g\x02\x02tu\x07p\x02\x02uv\x07H\x02\x02vw\x07q\x02" +
		"\x02wx\x07t\x02\x02xy\x07o\x02\x02y(\x03\x02\x02\x02z{\x07U\x02\x02{|" +
		"\x07c\x02\x02|}\x07x\x02\x02}~\x07g\x02\x02~\x7F\x07H\x02\x02\x7F\x80" +
		"\x07q\x02\x02\x80\x81\x07t\x02\x02\x81\x82\x07o\x02\x02\x82*\x03\x02\x02" +
		"\x02\x83\x84\x07u\x02\x02\x84\x85\x07g\x02\x02\x85\x86\x07n\x02\x02\x86" +
		"\x87\x07g\x02\x02\x87\x88\x07e\x02\x02\x88\x89\x07v\x02\x02\x89\x8A\x07" +
		"g\x02\x02\x8A\x94\x07f\x02\x02\x8B\x8C\x07U\x02\x02\x8C\x8D\x07G\x02\x02" +
		"\x8D\x8E\x07N\x02\x02\x8E\x8F\x07G\x02\x02\x8F\x90\x07E\x02\x02\x90\x91" +
		"\x07V\x02\x02\x91\x92\x07G\x02\x02\x92\x94\x07F\x02\x02\x93\x83\x03\x02" +
		"\x02\x02\x93\x8B\x03\x02\x02\x02\x94,\x03\x02\x02\x02\x95\x96\x07,\x02" +
		"\x02\x96.\x03\x02\x02\x02\x97\x9B\x07)\x02\x02\x98\x9A\n\x02\x02\x02\x99" +
		"\x98\x03\x02\x02\x02\x9A\x9D\x03\x02\x02\x02\x9B\x9C\x03\x02\x02\x02\x9B" +
		"\x99\x03\x02\x02\x02\x9C\x9E\x03\x02\x02\x02\x9D\x9B\x03\x02\x02\x02\x9E" +
		"\x9F\x07)\x02\x02\x9F0\x03\x02\x02\x02\xA0\xA3\x05/\x18\x02\xA1\xA2\x07" +
		"0\x02\x02\xA2\xA4\x05/\x18\x02\xA3\xA1\x03\x02\x02\x02\xA3\xA4\x03\x02" +
		"\x02\x02\xA4\xAF\x03\x02\x02\x02\xA5\xA9\x07.\x02\x02\xA6\xA8\x05C\"\x02" +
		"\xA7\xA6\x03\x02\x02\x02\xA8\xAB\x03\x02\x02\x02\xA9\xA7\x03\x02\x02\x02" +
		"\xA9\xAA\x03\x02\x02\x02\xAA\xAC\x03\x02\x02\x02\xAB\xA9\x03\x02\x02\x02" +
		"\xAC\xAE\x05/\x18\x02\xAD\xA5\x03\x02\x02\x02\xAE\xB1\x03\x02\x02\x02" +
		"\xAF\xAD\x03\x02\x02\x02\xAF\xB0\x03\x02\x02\x02\xB02\x03\x02\x02\x02" +
		"\xB1\xAF\x03\x02\x02\x02\xB2\xB3\x07v\x02\x02\xB3\xB4\x07t\x02\x02\xB4" +
		"\xB5\x07w\x02\x02\xB5\xBC\x07g\x02\x02\xB6\xB7\x07h\x02\x02\xB7\xB8\x07" +
		"c\x02\x02\xB8\xB9\x07n\x02\x02\xB9\xBA\x07u\x02\x02\xBA\xBC\x07g\x02\x02" +
		"\xBB\xB2\x03\x02\x02\x02\xBB\xB6\x03\x02\x02\x02\xBC4\x03\x02\x02\x02" +
		"\xBD\xBE\x059\x1D\x02\xBE6\x03\x02\x02\x02\xBF\xC0\x07B\x02\x02\xC0\xC1" +
		"\x05C\"\x02\xC1\xC2\x072\x02\x02\xC2\xCD\x03\x02\x02\x02\xC3\xC4\x07B" +
		"\x02\x02\xC4\xC5\x05C\"\x02\xC5\xC9\x05=\x1F\x02\xC6\xC8\x05? \x02\xC7" +
		"\xC6\x03\x02\x02\x02\xC8\xCB\x03\x02\x02\x02\xC9\xC7\x03\x02\x02\x02\xC9" +
		"\xCA\x03\x02\x02\x02\xCA\xCD\x03\x02\x02\x02\xCB\xC9\x03\x02\x02\x02\xCC" +
		"\xBF\x03\x02\x02\x02\xCC\xC3\x03\x02\x02\x02\xCD8\x03\x02\x02\x02\xCE" +
		"\xD7\x072\x02\x02\xCF\xD3\x070\x02\x02\xD0\xD2\x05? \x02\xD1\xD0\x03\x02" +
		"\x02\x02\xD2\xD5\x03\x02\x02\x02\xD3\xD1\x03\x02\x02\x02\xD3\xD4\x03\x02" +
		"\x02\x02\xD4\xD6\x03\x02\x02\x02\xD5\xD3\x03\x02\x02\x02\xD6\xD8\x05=" +
		"\x1F\x02\xD7\xCF\x03\x02\x02\x02\xD7\xD8\x03\x02\x02\x02\xD8\xEB\x03\x02" +
		"\x02\x02\xD9\xDD\x05=\x1F\x02\xDA\xDC\x05? \x02\xDB\xDA\x03\x02\x02\x02" +
		"\xDC\xDF\x03\x02\x02\x02\xDD\xDB\x03\x02\x02\x02\xDD\xDE\x03\x02\x02\x02" +
		"\xDE\xE8\x03\x02\x02\x02\xDF\xDD\x03\x02\x02\x02\xE0\xE4\x070\x02\x02" +
		"\xE1\xE3\x05? \x02\xE2\xE1\x03\x02\x02\x02\xE3\xE6\x03\x02\x02\x02\xE4" +
		"\xE2\x03\x02\x02\x02\xE4\xE5\x03\x02\x02\x02\xE5\xE7\x03\x02\x02\x02\xE6" +
		"\xE4\x03\x02\x02\x02\xE7\xE9\x05=\x1F\x02\xE8\xE0\x03\x02\x02\x02\xE8" +
		"\xE9\x03\x02\x02\x02\xE9\xEB\x03\x02\x02\x02\xEA\xCE\x03\x02\x02\x02\xEA" +
		"\xD9\x03\x02\x02\x02\xEB:\x03\x02\x02\x02\xEC\xF5\x072\x02\x02\xED\xF1" +
		"\t\x03\x02\x02\xEE\xF0\t\x04\x02\x02\xEF\xEE\x03\x02\x02\x02\xF0\xF3\x03" +
		"\x02\x02\x02\xF1\xEF\x03\x02\x02\x02\xF1\xF2\x03\x02\x02\x02\xF2\xF5\x03" +
		"\x02\x02\x02\xF3\xF1\x03\x02\x02\x02\xF4\xEC\x03\x02\x02\x02\xF4\xED\x03" +
		"\x02\x02\x02\xF5<\x03\x02\x02\x02\xF6\xF7\x043;\x02\xF7>\x03\x02\x02\x02" +
		"\xF8\xFC\x072\x02\x02\xF9\xFC\x05=\x1F\x02\xFA\xFC\x07a\x02\x02\xFB\xF8" +
		"\x03\x02\x02\x02\xFB\xF9\x03\x02\x02\x02\xFB\xFA\x03\x02\x02\x02\xFC@" +
		"\x03\x02\x02\x02\xFD\xFE\x071\x02\x02\xFE\xFF\x071\x02\x02\xFF\u0103\x03" +
		"\x02\x02\x02\u0100\u0102\n\x05\x02\x02\u0101\u0100\x03\x02\x02\x02\u0102" +
		"\u0105\x03\x02\x02\x02\u0103\u0101\x03\x02\x02\x02\u0103\u0104\x03\x02" +
		"\x02\x02\u0104\u0107\x03\x02\x02\x02\u0105\u0103\x03\x02\x02\x02\u0106" +
		"\u0108\x07\x0F\x02\x02\u0107\u0106\x03\x02\x02\x02\u0107\u0108\x03\x02" +
		"\x02\x02\u0108\u0109\x03\x02\x02\x02\u0109\u010A\x07\f\x02\x02\u010A\u010B" +
		"\x03\x02\x02\x02\u010B\u010C\b!\x02\x02\u010CB\x03\x02\x02\x02\u010D\u010E" +
		"\t\x06\x02\x02\u010E\u010F\x03\x02\x02\x02\u010F\u0110\b\"\x02\x02\u0110" +
		"D\x03\x02\x02\x02\x16\x02\x93\x9B\xA3\xA9\xAF\xBB\xC9\xCC\xD3\xD7\xDD" +
		"\xE4\xE8\xEA\xF1\xF4\xFB\u0103\u0107\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!kacoLexer.__ATN) {
			kacoLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(kacoLexer._serializedATN));
		}

		return kacoLexer.__ATN;
	}

}

