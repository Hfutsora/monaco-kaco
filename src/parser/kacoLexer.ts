// Generated from src/parser/kaco.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class kacoLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly OpenBracket = 9;
	public static readonly CloseBracket = 10;
	public static readonly OpenParen = 11;
	public static readonly CloseParen = 12;
	public static readonly SemiColon = 13;
	public static readonly Comma = 14;
	public static readonly Assign = 15;
	public static readonly Dot = 16;
	public static readonly Ellipsis = 17;
	public static readonly OpenForm = 18;
	public static readonly SaveForm = 19;
	public static readonly StringLiteral = 20;
	public static readonly StringDotLiteral = 21;
	public static readonly BooleanLiteral = 22;
	public static readonly DecimalLiteral = 23;
	public static readonly ParamLiteral = 24;
	public static readonly Decimal = 25;
	public static readonly LineComment = 26;
	public static readonly WhiteSpace = 27;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "OpenBracket", 
		"CloseBracket", "OpenParen", "CloseParen", "SemiColon", "Comma", "Assign", 
		"Dot", "Ellipsis", "OpenForm", "SaveForm", "StringLiteral", "StringDotLiteral", 
		"BooleanLiteral", "DecimalLiteral", "ParamLiteral", "Decimal", "NonZeroDigit", 
		"DigitChar", "LineComment", "WhiteSpace",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'if'", "'else'", "'{'", "'}'", "'-'", "'+'", "'/'", "'*'", 
		"'['", "']'", "'('", "')'", "';'", "','", "'='", "'.'", "'...'", "'OpenForm'", 
		"'SaveForm'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, "OpenBracket", "CloseBracket", "OpenParen", "CloseParen", 
		"SemiColon", "Comma", "Assign", "Dot", "Ellipsis", "OpenForm", "SaveForm", 
		"StringLiteral", "StringDotLiteral", "BooleanLiteral", "DecimalLiteral", 
		"ParamLiteral", "Decimal", "LineComment", "WhiteSpace",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(kacoLexer._LITERAL_NAMES, kacoLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return kacoLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(kacoLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "kaco.g4"; }

	// @Override
	public get ruleNames(): string[] { return kacoLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return kacoLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return kacoLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return kacoLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x1D\xDD\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03" +
		"\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06" +
		"\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f" +
		"\x03\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03" +
		"\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03" +
		"\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03" +
		"\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x07\x15z" +
		"\n\x15\f\x15\x0E\x15}\v\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x07" +
		"\x16\x84\n\x16\f\x16\x0E\x16\x87\v\x16\x03\x17\x03\x17\x03\x17\x03\x17" +
		"\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x05\x17\x92\n\x17\x03\x18\x03" +
		"\x18\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x07" +
		"\x19\x9E\n\x19\f\x19\x0E\x19\xA1\v\x19\x05\x19\xA3\n\x19\x03\x1A\x03\x1A" +
		"\x03\x1A\x07\x1A\xA8\n\x1A\f\x1A\x0E\x1A\xAB\v\x1A\x03\x1A\x05\x1A\xAE" +
		"\n\x1A\x03\x1A\x03\x1A\x07\x1A\xB2\n\x1A\f\x1A\x0E\x1A\xB5\v\x1A\x03\x1A" +
		"\x03\x1A\x07\x1A\xB9\n\x1A\f\x1A\x0E\x1A\xBC\v\x1A\x03\x1A\x05\x1A\xBF" +
		"\n\x1A\x05\x1A\xC1\n\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x05\x1C" +
		"\xC8\n\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x07\x1D\xCE\n\x1D\f\x1D\x0E" +
		"\x1D\xD1\v\x1D\x03\x1D\x05\x1D\xD4\n\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D" +
		"\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03{\x02\x02\x1F\x03\x02\x03\x05\x02" +
		"\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02" +
		"\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11" +
		"!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02" +
		"\x191\x02\x1A3\x02\x1B5\x02\x027\x02\x029\x02\x1C;\x02\x1D\x03\x02\x05" +
		"\x05\x02\f\f\x0F\x0F^^\x04\x02\f\f\x0F\x0F\x05\x02\v\f\x0F\x0F\"\"\x02" +
		"\xE9\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02" +
		"\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02" +
		"\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02" +
		"\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02" +
		"\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02" +
		"\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'" +
		"\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02" +
		"\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02" +
		"\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x03=\x03\x02\x02\x02\x05@\x03" +
		"\x02\x02\x02\x07E\x03\x02\x02\x02\tG\x03\x02\x02\x02\vI\x03\x02\x02\x02" +
		"\rK\x03\x02\x02\x02\x0FM\x03\x02\x02\x02\x11O\x03\x02\x02\x02\x13Q\x03" +
		"\x02\x02\x02\x15S\x03\x02\x02\x02\x17U\x03\x02\x02\x02\x19W\x03\x02\x02" +
		"\x02\x1BY\x03\x02\x02\x02\x1D[\x03\x02\x02\x02\x1F]\x03\x02\x02\x02!_" +
		"\x03\x02\x02\x02#a\x03\x02\x02\x02%e\x03\x02\x02\x02\'n\x03\x02\x02\x02" +
		")w\x03\x02\x02\x02+\x80\x03\x02\x02\x02-\x91\x03\x02\x02\x02/\x93\x03" +
		"\x02\x02\x021\xA2\x03\x02\x02\x023\xC0\x03\x02\x02\x025\xC2\x03\x02\x02" +
		"\x027\xC7\x03\x02\x02\x029\xC9\x03\x02\x02\x02;\xD9\x03\x02\x02\x02=>" +
		"\x07k\x02\x02>?\x07h\x02\x02?\x04\x03\x02\x02\x02@A\x07g\x02\x02AB\x07" +
		"n\x02\x02BC\x07u\x02\x02CD\x07g\x02\x02D\x06\x03\x02\x02\x02EF\x07}\x02" +
		"\x02F\b\x03\x02\x02\x02GH\x07\x7F\x02\x02H\n\x03\x02\x02\x02IJ\x07/\x02" +
		"\x02J\f\x03\x02\x02\x02KL\x07-\x02\x02L\x0E\x03\x02\x02\x02MN\x071\x02" +
		"\x02N\x10\x03\x02\x02\x02OP\x07,\x02\x02P\x12\x03\x02\x02\x02QR\x07]\x02" +
		"\x02R\x14\x03\x02\x02\x02ST\x07_\x02\x02T\x16\x03\x02\x02\x02UV\x07*\x02" +
		"\x02V\x18\x03\x02\x02\x02WX\x07+\x02\x02X\x1A\x03\x02\x02\x02YZ\x07=\x02" +
		"\x02Z\x1C\x03\x02\x02\x02[\\\x07.\x02\x02\\\x1E\x03\x02\x02\x02]^\x07" +
		"?\x02\x02^ \x03\x02\x02\x02_`\x070\x02\x02`\"\x03\x02\x02\x02ab\x070\x02" +
		"\x02bc\x070\x02\x02cd\x070\x02\x02d$\x03\x02\x02\x02ef\x07Q\x02\x02fg" +
		"\x07r\x02\x02gh\x07g\x02\x02hi\x07p\x02\x02ij\x07H\x02\x02jk\x07q\x02" +
		"\x02kl\x07t\x02\x02lm\x07o\x02\x02m&\x03\x02\x02\x02no\x07U\x02\x02op" +
		"\x07c\x02\x02pq\x07x\x02\x02qr\x07g\x02\x02rs\x07H\x02\x02st\x07q\x02" +
		"\x02tu\x07t\x02\x02uv\x07o\x02\x02v(\x03\x02\x02\x02w{\x07)\x02\x02xz" +
		"\n\x02\x02\x02yx\x03\x02\x02\x02z}\x03\x02\x02\x02{|\x03\x02\x02\x02{" +
		"y\x03\x02\x02\x02|~\x03\x02\x02\x02}{\x03\x02\x02\x02~\x7F\x07)\x02\x02" +
		"\x7F*\x03\x02\x02\x02\x80\x85\x05)\x15\x02\x81\x82\x070\x02\x02\x82\x84" +
		"\x05)\x15\x02\x83\x81\x03\x02\x02\x02\x84\x87\x03\x02\x02\x02\x85\x83" +
		"\x03\x02\x02\x02\x85\x86\x03\x02\x02\x02\x86,\x03\x02\x02\x02\x87\x85" +
		"\x03\x02\x02\x02\x88\x89\x07v\x02\x02\x89\x8A\x07t\x02\x02\x8A\x8B\x07" +
		"w\x02\x02\x8B\x92\x07g\x02\x02\x8C\x8D\x07h\x02\x02\x8D\x8E\x07c\x02\x02" +
		"\x8E\x8F\x07n\x02\x02\x8F\x90\x07u\x02\x02\x90\x92\x07g\x02\x02\x91\x88" +
		"\x03\x02\x02\x02\x91\x8C\x03\x02\x02\x02\x92.\x03\x02\x02\x02\x93\x94" +
		"\x053\x1A\x02\x940\x03\x02\x02\x02\x95\x96\x07B\x02\x02\x96\x97\x05;\x1E" +
		"\x02\x97\x98\x072\x02\x02\x98\xA3\x03\x02\x02\x02\x99\x9A\x07B\x02\x02" +
		"\x9A\x9B\x05;\x1E\x02\x9B\x9F\x055\x1B\x02\x9C\x9E\x057\x1C\x02\x9D\x9C" +
		"\x03\x02\x02\x02\x9E\xA1\x03\x02\x02\x02\x9F\x9D\x03\x02\x02\x02\x9F\xA0" +
		"\x03\x02\x02\x02\xA0\xA3\x03\x02\x02\x02\xA1\x9F\x03\x02\x02\x02\xA2\x95" +
		"\x03\x02\x02\x02\xA2\x99\x03\x02\x02\x02\xA32\x03\x02\x02\x02\xA4\xAD" +
		"\x072\x02\x02\xA5\xA9\x070\x02\x02\xA6\xA8\x057\x1C\x02\xA7\xA6\x03\x02" +
		"\x02\x02\xA8\xAB\x03\x02\x02\x02\xA9\xA7\x03\x02\x02\x02\xA9\xAA\x03\x02" +
		"\x02\x02\xAA\xAC\x03\x02\x02\x02\xAB\xA9\x03\x02\x02\x02\xAC\xAE\x055" +
		"\x1B\x02\xAD\xA5\x03\x02\x02\x02\xAD\xAE\x03\x02\x02\x02\xAE\xC1\x03\x02" +
		"\x02\x02\xAF\xB3\x055\x1B\x02\xB0\xB2\x057\x1C\x02\xB1\xB0\x03\x02\x02" +
		"\x02\xB2\xB5\x03\x02\x02\x02\xB3\xB1\x03\x02\x02\x02\xB3\xB4\x03\x02\x02" +
		"\x02\xB4\xBE\x03\x02\x02\x02\xB5\xB3\x03\x02\x02\x02\xB6\xBA\x070\x02" +
		"\x02\xB7\xB9\x057\x1C\x02\xB8\xB7\x03\x02\x02\x02\xB9\xBC\x03\x02\x02" +
		"\x02\xBA\xB8\x03\x02\x02\x02\xBA\xBB\x03\x02\x02\x02\xBB\xBD\x03\x02\x02" +
		"\x02\xBC\xBA\x03\x02\x02\x02\xBD\xBF\x055\x1B\x02\xBE\xB6\x03\x02\x02" +
		"\x02\xBE\xBF\x03\x02\x02\x02\xBF\xC1\x03\x02\x02\x02\xC0\xA4\x03\x02\x02" +
		"\x02\xC0\xAF\x03\x02\x02\x02\xC14\x03\x02\x02\x02\xC2\xC3\x043;\x02\xC3" +
		"6\x03\x02\x02\x02\xC4\xC8\x072\x02\x02\xC5\xC8\x055\x1B\x02\xC6\xC8\x07" +
		"a\x02\x02\xC7\xC4\x03\x02\x02\x02\xC7\xC5\x03\x02\x02\x02\xC7\xC6\x03" +
		"\x02\x02\x02\xC88\x03\x02\x02\x02\xC9\xCA\x071\x02\x02\xCA\xCB\x071\x02" +
		"\x02\xCB\xCF\x03\x02\x02\x02\xCC\xCE\n\x03\x02\x02\xCD\xCC\x03\x02\x02" +
		"\x02\xCE\xD1\x03\x02\x02\x02\xCF\xCD\x03\x02\x02\x02\xCF\xD0\x03\x02\x02" +
		"\x02\xD0\xD3\x03\x02\x02\x02\xD1\xCF\x03\x02\x02\x02\xD2\xD4\x07\x0F\x02" +
		"\x02\xD3\xD2\x03\x02\x02\x02\xD3\xD4\x03\x02\x02\x02\xD4\xD5\x03\x02\x02" +
		"\x02\xD5\xD6\x07\f\x02\x02\xD6\xD7\x03\x02\x02\x02\xD7\xD8\b\x1D\x02\x02" +
		"\xD8:\x03\x02\x02\x02\xD9\xDA\t\x04\x02\x02\xDA\xDB\x03\x02\x02\x02\xDB" +
		"\xDC\b\x1E\x02\x02\xDC<\x03\x02\x02\x02\x11\x02{\x85\x91\x9F\xA2\xA9\xAD" +
		"\xB3\xBA\xBE\xC0\xC7\xCF\xD3\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!kacoLexer.__ATN) {
			kacoLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(kacoLexer._serializedATN));
		}

		return kacoLexer.__ATN;
	}

}

